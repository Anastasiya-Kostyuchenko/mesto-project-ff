{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/validation.js","webpack://mesto-project-ff/./src/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// Создание карточки с колбэками для событий\nexport function createCard(\n  template,\n  cardData,\n  userId,\n  { onLike, onUnlike, onDelete, onImageClick }\n) {\n  const cardElement = template.content\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const likeCounter = cardElement.querySelector(\".card__like-counter\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  cardImage.setAttribute(\"src\", cardData.link);\n  cardImage.setAttribute(\"alt\", cardData.name);\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\n\n  const isLiked = cardData.likes.some((user) => user._id === userId);\n  if (isLiked) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  // Обновление счетчика лайков\n  if (likeCounter) {\n    likeCounter.textContent = cardData.likes.length;\n  } else {\n    console.error(\"Элемент likeCounter не найден\");\n  }\n\n  // Обработчик лайка\n  likeButton.addEventListener(\"click\", () => {\n    likeCallback(cardData._id, likeButton, likeCounter, onLike, onUnlike);\n  });\n\n  // Обработчик удаления\n  deleteCallback(cardData, userId, cardElement, deleteButton, onDelete);\n\n  // Обработчик клика на изображение для открытия попапа\n  cardImage.addEventListener(\"click\", () => {\n    onImageClick(cardData);\n  });\n\n  return cardElement;\n}\n\n// Колбэк для лайка\nconst likeCallback = (cardId, likeButton, likeCounter, onLike, onUnlike) => {\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n  const action = isLiked ? onUnlike : onLike;\n\n  action(cardId)\n    .then((updatedCardData) => {\n      likeButton.classList.toggle(\"card__like-button_is-active\", !isLiked);\n      if (likeCounter) {\n        likeCounter.textContent = updatedCardData.likes.length;\n      }\n    })\n    .catch((err) => {\n      console.error(`Ошибка при изменении лайка: ${err}`);\n    });\n};\n\n// Колбэк для удаления карточки\nconst deleteCallback = (\n  cardData,\n  userId,\n  cardElement,\n  deleteButton,\n  onDelete\n) => {\n  if (cardData.owner._id === userId) {\n    deleteButton.addEventListener(\"click\", () => {\n      onDelete(cardData._id)\n        .then(() => {\n          cardElement.remove();\n        })\n        .catch((err) => {\n          console.error(`Ошибка при удалении карточки: ${err}`);\n        });\n    });\n  } else {\n    deleteButton.remove();\n  }\n};\n","let openedPopup = null; // Переменная для хранения открытого попапа\n\n// Универсальная функция открытия попапов\nexport function openPopup(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  openedPopup = popup;\n  document.addEventListener(\"keydown\", handleEscClose);\n}\n\n// Универсальная функция закрытия попапов\n\nexport function closePopup(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  function handleTransitionEnd() {\n    popup.classList.remove(\"popup_is-opened\");\n    popup.removeEventListener(\"transitionend\", handleTransitionEnd);\n  }\n  popup.addEventListener(\"transitionend\", handleTransitionEnd);\n\n  openedPopup = null;\n  document.removeEventListener(\"keydown\", handleEscClose);\n}\n\n// Закрытие по клавише Escape\nexport function handleEscClose(evt) {\n  if (evt.key === \"Escape\") {\n    if (openedPopup) {\n      closePopup(openedPopup);\n    }\n  }\n}\n\nexport function setPopupListeners() {\n  // Закрытие попапа по клику на оверлей\n  const popups = document.querySelectorAll(\".popup\");\n  popups.forEach((popup) => {\n    popup.addEventListener(\"click\", (evt) => {\n      if (\n        evt.target === evt.currentTarget ||\n        evt.target.classList.contains(\"popup__close\")\n      ) {\n        closePopup(popup);\n      }\n    });\n  });\n}\n","// Функция для показа ошибки валидации\nexport function showInputError(\n  formElement,\n  inputElement,\n  errorMessage,\n  config\n) {\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\n  if (!errorElement) {\n    console.error(`Элемент ошибки для ${inputElement.name} не найден`);\n    return;\n  }\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(config.errorClass);\n}\n\n// Функция для скрытия ошибки валидации\nexport function hideInputError(formElement, inputElement, config) {\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.classList.remove(config.errorClass);\n  errorElement.textContent = \"\";\n}\n\n// Проверка поля на валидность\nexport function checkInputValidity(formElement, inputElement, config) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  // Отображение ошибки или её скрытие\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      config\n    );\n  } else {\n    hideInputError(formElement, inputElement, config);\n  }\n}\n\n// Проверка состояния кнопки отправки\nexport function toggleButtonState(inputList, buttonElement, config) {\n  const isFormValid = inputList.every(\n    (inputElement) => inputElement.validity.valid\n  );\n\n  if (isFormValid) {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(config.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(config.inactiveButtonClass);\n  }\n}\n\n// Навешиваем обработчики событий на форму\nexport function setEventListeners(formElement, config, renderLoading) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(config.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      checkInputValidity(formElement, inputElement, config);\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n}\n\n// Функция включения валидации\nexport function enableValidation(config, renderLoading) {\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\n\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n\n      const buttonElement = formElement.querySelector(\n        config.submitButtonSelector\n      );\n      renderLoading(true, buttonElement);\n    });\n\n    setEventListeners(formElement, config, renderLoading);\n  });\n}\n\n// Очистка ошибок валидации и сброс состояния кнопки\nexport function clearValidation(formElement, config, renderLoading) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(config.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, config);\n    inputElement.value = \"\";\n  });\n\n  toggleButtonState(inputList, buttonElement, config);\n}\n","export const cohortId = \"wff-cohort-24\";\nexport const apiToken = \"1f0c507e-d045-450a-a244-e6e5498819e0\";\n\n// Функция для проверки ответа сервера\nexport function checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n// Получение данных пользователя с сервера\nexport function getUserInfo() {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/users/me`, {\n    headers: {\n      authorization: apiToken,\n    },\n  }).then(checkResponse);\n}\n\n// Обновление данных профиля\nexport function updateProfile(name, about) {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/users/me`, {\n    method: \"PATCH\",\n    headers: {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      name: name,\n      about: about,\n    }),\n  }).then(checkResponse);\n}\n\n// Получение всех карточек\nexport function getCards() {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/cards`, {\n    headers: {\n      authorization: apiToken,\n    },\n  }).then(checkResponse);\n}\n\n// Добавление новой карточки функция\nexport function addCard(name, link) {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/cards`, {\n    method: \"POST\",\n    headers: {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      name: name,\n      link: link,\n    }),\n  }).then(checkResponse);\n}\n\n// Удаление карточки\nexport function deleteCard(cardId) {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: apiToken,\n    },\n  }).then(checkResponse);\n}\n\n// Функция для постановки лайка\nexport function likeCard(cardId) {\n  return fetch(\n    `https://nomoreparties.co/v1/${cohortId}/cards/likes/${cardId}`,\n    {\n      method: \"PUT\",\n      headers: {\n        authorization: apiToken,\n      },\n    }\n  ).then(checkResponse);\n}\n\n// Функция для снятия лайка\nexport function unlikeCard(cardId) {\n  return fetch(\n    `https://nomoreparties.co/v1/${cohortId}/cards/likes/${cardId}`,\n    {\n      method: \"DELETE\",\n      headers: {\n        authorization: apiToken,\n      },\n    }\n  ).then(checkResponse);\n}\n\n// Получение данных пользователя\n\nexport function getUserProfile(cohortId, apiToken) {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/users/me`, {\n    method: \"GET\",\n    headers: {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(checkResponse);\n}\n\nexport function updateAvatar(cohortId, apiToken, newAvatarUrl) {\n  return fetch(`https://nomoreparties.co/v1/${cohortId}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ avatar: newAvatarUrl }),\n  }).then(checkResponse);\n}\n","import \"./index.css\";\nimport { createCard } from \"./components/card.js\";\nimport {\n  openPopup,\n  closePopup,\n  setPopupListeners,\n} from \"./components/modal.js\";\nimport {\n  enableValidation,\n  clearValidation,\n  showInputError,\n  hideInputError,\n  checkInputValidity,\n  toggleButtonState,\n  setEventListeners,\n} from \"./validation.js\";\nimport {\n  getUserInfo,\n  getCards,\n  updateProfile,\n  addCard,\n  checkResponse,\n  cohortId,\n  apiToken,\n  deleteCard,\n  likeCard,\n  unlikeCard,\n  getUserProfile,\n  updateAvatar,\n} from \"./api.js\";\n\n// Переменные\nconst cardTemplate = document.querySelector(\"#card-template\");\nconst placesList = document.querySelector(\".places__list\");\nconst editPopup = document.querySelector(\".popup_type_edit\");\nconst addCardPopup = document.querySelector(\".popup_type_new-card\");\nconst editButton = document.querySelector(\".profile__edit-button\");\nconst addButton = document.querySelector(\".profile__add-button\");\nconst editProfileForm = editPopup.querySelector(\".popup__form\");\nconst addCardForm = addCardPopup.querySelector(\".popup__form\");\nconst nameInput = document.querySelector(\".popup__input_type_name\");\nconst jobInput = document.querySelector(\".popup__input_type_description\");\nconst profileName = document.querySelector(\".profile__title\");\nconst profileJob = document.querySelector(\".profile__description\");\nconst cardNameInput = document.querySelector(\".popup__input_type_card-name\");\nconst cardUrlInput = document.querySelector(\".popup__input_type_url\");\nconst cardForm = document.querySelector('form[name=\"new-place\"]');\nconst imagePopup = document.querySelector(\".popup_type_image\");\nconst imageElement = imagePopup.querySelector(\".popup__image\");\nconst captionElement = imagePopup.querySelector(\".popup__caption\");\n\nconst profileImage = document.querySelector(\".profile__image\");\n\nconst config = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\nsetPopupListeners();\n\n// Обработчик открытия попапа редактирования профиля\neditButton.addEventListener(\"click\", () => {\n  nameInput.value = profileName.textContent;\n  jobInput.value = profileJob.textContent;\n  clearValidation(editProfileForm, config);\n  openPopup(editPopup);\n});\n\n// Обработчик сохранения данных профиля\neditProfileForm.addEventListener(\"submit\", (evt) => {\n  evt.preventDefault();\n  renderLoading(true, avatarSubmitButton, \"Сохранение...\");\n  updateProfile(nameInput.value, jobInput.value)\n    .then((updatedUserData) => {\n      profileName.textContent = updatedUserData.name;\n      profileJob.textContent = updatedUserData.about;\n      closePopup(editPopup);\n    })\n    .catch((err) => {\n      console.error(`Ошибка обновления профиля: ${err}`);\n    })\n    .finally(() => {\n      renderLoading(false, avatarSubmitButton, \"Сохранить\");\n    });\n});\n\n// Обработчик открытия попапа добавления карточки\naddButton.addEventListener(\"click\", () => {\n  clearValidation(addCardForm, config);\n  openPopup(addCardPopup);\n});\n\nlet userId;\n\nPromise.all([getUserInfo(), getCards()]).then(([userData, cards]) => {\n  profileName.textContent = userData.name;\n  profileJob.textContent = userData.about;\n  profileImage.style.backgroundImage = `url('${userData.avatar}')`;\n  if (!Array.isArray(cards)) {\n    console.error(\"cards не является массивом\");\n    return;\n  }\n\n  // Отображение карточек на странице\n  cards.forEach((card) => {\n    const cardElement = createCard(cardTemplate, card, userData._id, {\n      onLike: likeCard,\n      onUnlike: unlikeCard,\n      onDelete: deleteCard,\n    });\n    placesList.append(cardElement);\n  });\n  userId = userData._id;\n});\n\n// Обработчик добавления новой карточки\ncardForm.addEventListener(\"submit\", (evt) => {\n  evt.preventDefault();\n  renderLoading(true, avatarSubmitButton, \"Сохранение...\");\n\n  addCard(cardNameInput.value, cardUrlInput.value)\n    .then((newCardData) => {\n      const cardElement = createCard(cardTemplate, newCardData, userId, {\n        onLike: likeCard,\n        onUnlike: unlikeCard,\n        onDelete: deleteCard,\n      });\n      placesList.prepend(cardElement);\n      closePopup(addCardPopup);\n      cardForm.reset();\n    })\n    .catch((err) => {\n      console.error(`Ошибка добавления карточки: ${err}`);\n    })\n    .finally(() => {\n      renderLoading(false, avatarSubmitButton, \"Сохранить\");\n    });\n});\n\nconst avatarPopup = document.querySelector(\".popup_type_avatar\");\nconst avatarOpenButton = document.querySelector(\".profile__image\");\nconst avatarCloseButton = avatarPopup.querySelector(\".popup__close\");\nconst avatarForm = document.querySelector('form[name=\"avatar-form\"]');\nconst avatarSubmitButton = avatarForm.querySelector(\".popup__button\");\n\n// Открытие попапа\navatarOpenButton.addEventListener(\"click\", () => {\n  openPopup(avatarPopup);\n  avatarSubmitButton.disabled = true;\n  avatarSubmitButton.classList.add(config.inactiveButtonClass);\n});\n\n// Закрытие попапа\navatarCloseButton.addEventListener(\"click\", () => {\n  closePopup(avatarPopup);\n  avatarForm.reset();\n  avatarSubmitButton.disabled = true;\n  avatarSubmitButton.classList.add(config.inactiveButtonClass);\n});\n\n// Функция для проверки валидности URL\nfunction isValidURL(url) {\n  const urlPattern =\n    /^(http:\\/\\/|https:\\/\\/)([\\w\\-]+\\.)+[\\w]{2,}(\\/[\\w\\-.~:?#[\\]@!$&'()*+,;=]*)*\\/?$/i;\n  return urlPattern.test(url);\n}\n\n// Функция для отображения состояния загрузки\nfunction renderLoading(isLoading, buttonElement, defaultText = \"Сохранить\") {\n  if (isLoading) {\n    buttonElement.textContent = \"Сохранение...\";\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.textContent = defaultText;\n    buttonElement.disabled = false;\n  }\n}\n\nenableValidation(config, renderLoading);\n\n// Проверка валидности URL перед отправкой\navatarForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const avatarInput = avatarForm.querySelector(\".popup__input_type_avatar\");\n  const newAvatarUrl = avatarInput.value;\n\n  renderLoading(true, avatarSubmitButton, \"Сохранение...\");\n\n  updateAvatar(cohortId, apiToken, newAvatarUrl)\n    .then((data) => {\n      profileImage.style.backgroundImage = `url('${newAvatarUrl}')`;\n      closePopup(avatarPopup);\n    })\n    .catch((err) => {\n      console.error(`Ошибка при смене аватара: ${err}`);\n      const errorElement = document.querySelector(\".avatar-error\");\n      errorElement.textContent = \"Не удалось сменить аватар. Попробуйте снова.\";\n    })\n    .finally(() => {\n      renderLoading(false, avatarSubmitButton, \"Сохранить\");\n    });\n});\n"],"names":["createCard","template","cardData","userId","_ref","onLike","onUnlike","onDelete","onImageClick","cardElement","content","querySelector","cloneNode","cardImage","likeCounter","likeButton","deleteButton","setAttribute","link","name","textContent","likes","some","user","_id","classList","add","length","console","error","addEventListener","likeCallback","deleteCallback","cardId","isLiked","contains","then","updatedCardData","toggle","catch","err","concat","owner","remove","openedPopup","openPopup","popup","document","handleEscClose","closePopup","handleTransitionEnd","removeEventListener","evt","key","hideInputError","formElement","inputElement","config","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","every","validity","valid","disabled","inactiveButtonClass","clearValidation","renderLoading","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","value","cohortId","apiToken","checkResponse","res","ok","json","Promise","reject","status","deleteCard","fetch","method","headers","authorization","likeCard","unlikeCard","cardTemplate","placesList","editPopup","addCardPopup","editButton","addButton","editProfileForm","addCardForm","nameInput","jobInput","profileName","profileJob","cardNameInput","cardUrlInput","cardForm","imagePopup","profileImage","formSelector","target","currentTarget","about","preventDefault","avatarSubmitButton","body","JSON","stringify","updatedUserData","finally","all","_ref2","userData","cards","style","backgroundImage","avatar","isArray","card","append","newCardData","prepend","reset","avatarPopup","avatarOpenButton","avatarCloseButton","avatarForm","isLoading","defaultText","arguments","undefined","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","event","newAvatarUrl","updateAvatar","data"],"sourceRoot":""}